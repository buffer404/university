/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include "stdio.h"
#include "platform.h"
#include "xil_printf.h"
#include "xil_io.h"

#include <xuartlite.h>
#include <xparameters.h>

#define MAX_LINE_SIZE 64

int n = 0;

char recieve_char[1];

int matrix[7][7];
int answer[7];
int result[7];
int check_filler[7] = {0};
int point_n = 0;
int point_m = 0;

void print_matrix(){
	for (int i = 0; i < n; i++){
		for (int j = 0; j < n ; j++){
			printf("%d ", matrix[i][j]);
		}
		printf("= %d", answer[i]);
		printf("\n\r");
	}
}

void fill_matrix(uint16_t *arr, size_t index){
	for (int i = 0; i < n; i++){
		matrix[index][i] = arr[i];
	}
	check_filler[index] = 1;
}

int check_matrix(){
	for(int i = 0; i < n; i++)
		if(!check_filler[i])
			return 0;
	return 1;
}

uint16_t get_index(uint16_t raw, uint16_t val) {
	return !raw ? 0 : (raw & 1 ? val : get_index(raw / 2, val + 1));
}

int calc_det(){

}

void calc_result(){
	int main_delta = calc_det();
}

int main()
{
    init_platform();

    //print("Hello World\n\r");

    printf("Hello, enter N\n\r");
    scanf("%d", &n);
    printf("%d\n\r", n);
    printf("Start to enter matrix\n\r");
    printf("You need to turn on switch at position of row number for each input row\n\r");

    while (!check_matrix()){
    	printf("Enter row using space as delimiter\n\r");
    	uint16_t value[7];
    	for (int i = 0; i < n; i++) {
    		scanf("%hd", value + i);
    		printf("%d ", value[i]);
    	}
    	printf("\n");
    	size_t index = get_index(Xil_In16(0x40000008), 0);

    	fill_matrix(value, index);
    	printf("Enter answer for this row\n\r");
    	scanf("%d", answer + index);
    	printf("%d\n\r", answer[index]);
    	print_matrix();
    }

    int result [n] = calc_result();



//
//    uint16_t i;
//
//    for (;;) {
//    	scanf("%hx", &i);
//    	Xil_Out16(0x40000000, i);
//    	printf("\n\r%x", Xil_In16(0x40000008));
//    }
//
//
//
//


    cleanup_platform();
    return 0;
}
